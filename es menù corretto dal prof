#include <stdio.h>

void inverti(int n, int array[])
{
    int i, k, temp;
    k = n;
    for (i = 0; i < (n / 2); i++)
    { // ciclo fino alla meta dell'array facendo la meta dei giri e scambiano i numeri prima della metà con i numeri dopo la meta
        temp = array[i];
        array[i] = array[k - 1];
        array[k - 1] = temp;
        k--; // diminuisco dopo aver cambiato
    }
}
float media(int array[], int *n)
{
    int somman;
    int contatore = 0;
    float median;
    for (int i = 0; i < n; i++)
    {
        somman = array[*n] + array[*n + 1];
        contatore++;
    }
    median = (float)somman / contatore; // casto cosi farò in modo che il risultato sarà in float e non in intero
    return median;
}
int pari(int array[], int *n)
{
    int numPari;
    for (int i = 0; i < n; i++)
    {
        if (array[*n] % 2 == 0)
        {
            array[*n] = numPari;
            printf("I numeri pari sono:%d\n", numPari);
        }
    }
    return numPari;
}
int dispari(int array[], int n)
{
    int numDisp;
    for (int i = 0; i < n; i++)
    {
        if (array[n] % 2 == 1)
        {
            array[n] = numDisp;
            printf("I numeri dispari sono:%d\n", numDisp);
        }
    }
    return numDisp;
}
int ricerca(int array[], int *n)
{
    int numr;
    printf("Inserisci un numero");
    scanf("%d", &numr);
    for (int i = 0; i <= n; i++)
    {
        if (numr == array[*n])
        {
            return numr;
        }
        else
        {
            return -1;
        }
    }
}
void elimina2(int n, int array[])
{
    int i, t, k = 0, pos = 0, j = 0;
    printf("\n");
    printf("Inserisci il numero da eliminare");
    scanf("%d", &t);
    for (i = 0; i < n; i++)
    {
        if (array[i] == t)
        {            // verifico se il numero da eliminare è presente nell'array
            pos = i; // salvo la posizione
            k = k + 1;
            for (j = pos; j < n - 1; j++)
                array[j] = array[j + 1]; // dopo aver tolto il numero traslo i numeri dopo ricompattando il tutto
        }
    }
    if (k > 0)
    {
        printf("Il numero %d", t);
        printf("esiste e si ripete %d", k);
        printf("volte");
        printf("\n");
    }
    else
    {
        printf("Il numero %d", t);
        printf("non esiste nel vettore");
    }
    for (i = 0; i < (n - k); i++)
    {
        printf("\n");
        printf("%d", array[i]);
    }
}

void esegui_operazione(int posizione, int array[], int *n, int s, double median, int numPari, int numDisp)
{

    if (s == 1)
    {
        int valore, posizione;
        printf("Inserisci il valore da eliminare: ");
        scanf("%d", &valore);
        posizione = ricerca(array, *n);

        if (posizione > -1)
        {
            elimina(array, *n, posizione);
        }
        else
        {
            printf("valore non esistente");
        }
    }
    if (s == 2)
    {
        do
        {
            dispari(*n, array);
            printf("i numeri dispari sono : %d", numDisp);
        } while (numDisp % 2 != 0);
    }
    if (s == 3)
    {
        do
        {
            pari(*n, array);
            printf("i numeri pari sono : %d", numPari);
        } while (numPari != 0);
    }
    if (s == 4)
    {
        inversa(array, *n);
        printf("Valore inserito in posizione: %d", array);
    }
    if (s == 5)
    {
        media(array, *n);
        printf("La media è: %f", &median);
    }

    if (s == 6)
    {
    }
    if (s == 7)
    {
    }
}
int menu()
{

    int scelta;

    printf("\n\npremere 1 per elimina\n");
    printf("premere 2 per dispari\n");
    printf("premere 3 per pari\n");
    printf("premere 4 per inversa\n");
    printf("premere 5 per media\n");
    printf("premere 6 per scambiare\n");
    printf("premere 7 per ordinare\n");
    printf("premere 0 per terminare\n");

    scanf("%d", &scelta);

    return scelta;
}

int main(int argc, char *argv[])
{
    int n = 10;
    int array[n];
    for (int i = 0; i < n; i++)
    {
        printf(" Inserisci una sequenza di 10 numeri");
        scanf("%d", &array[i]);
        printf("I valori dell'array sono:%d\n", array[i]);
    }

    return 0;
}
